<Window x:Class="Window"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:test2"
        mc:Ignorable="d"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        Title="Window" 
        Height="{Binding WindowHeight, Mode=TwoWay}" Width="{Binding WindowWidth, Mode=TwoWay}">
    <Window.Resources>
        <Style TargetType="TreeViewItem" x:Key="TreeViewItemStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem" xmlns:s="clr-namespace:System;assembly=mscorlib">
                        <Grid HorizontalAlignment="Stretch">
                            <!--<Grid>-->
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="19" />
                                <ColumnDefinition Width="*"/>
                                <!-- Change to expand width of tree items to base TreeView size (expand to right edge) -->
                                <!--<ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />-->
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <ToggleButton IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsExpanded,Mode=TwoWay}" ClickMode="Press" Name="Expander">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Style.Resources>
                                            <ResourceDictionary />
                                        </Style.Resources>
                                        <Setter Property="UIElement.Focusable">
                                            <Setter.Value>
                                                <s:Boolean>False</s:Boolean>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="FrameworkElement.Width">
                                            <Setter.Value>
                                                <s:Double>16</s:Double>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="FrameworkElement.Height">
                                            <Setter.Value>
                                                <s:Double>16</s:Double>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Border Padding="5,5,5,5" Background="#00FFFFFF" Width="30" Height="30">
                                                        <Path Fill="#00FFFFFF" Stroke="#FF989898" Name="ExpandPath">
                                                            <Path.Data>
                                                                <!-- マークを変えるにはここの値を変える -->
                                                                <PathGeometry Figures="M0,0L0,05L05,0z" />
                                                                <!-- <PathGeometry Figures="M0,0L0,10L10,0z" /> -->
                                                            </Path.Data>
                                                            <Path.RenderTransform>
                                                                <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                            </Path.RenderTransform>
                                                        </Path>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="UIElement.IsMouseOver">
                                                            <Setter TargetName="ExpandPath" Property="Shape.Stroke">
                                                                <Setter.Value>
                                                                    <SolidColorBrush>#FF1BBBFA</SolidColorBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter TargetName="ExpandPath" Property="Shape.Fill">
                                                                <Setter.Value>
                                                                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Trigger.Value>
                                                                <s:Boolean>True</s:Boolean>
                                                            </Trigger.Value>
                                                        </Trigger>
                                                        <Trigger Property="ToggleButton.IsChecked">
                                                            <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                                                                <Setter.Value>
                                                                    <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter TargetName="ExpandPath" Property="Shape.Fill">
                                                                <Setter.Value>
                                                                    <SolidColorBrush>#FF595959</SolidColorBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter TargetName="ExpandPath" Property="Shape.Stroke">
                                                                <Setter.Value>
                                                                    <SolidColorBrush>#FF262626</SolidColorBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Trigger.Value>
                                                                <s:Boolean>True</s:Boolean>
                                                            </Trigger.Value>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True" Grid.Column="1">
                                <ContentPresenter Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentSource="Header" Name="PART_Header" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Border>
                            <!--<ItemsPresenter Name="ItemsHost" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2"/>-->
                            <ItemsPresenter Name="ItemsHost" Grid.Column="1" Grid.Row="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TreeViewItem.IsExpanded">
                                <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="{x:Static Visibility.Collapsed}" />
                                <Trigger.Value>
                                    <s:Boolean>False</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                            <Trigger Property="ItemsControl.HasItems">
                                <Setter TargetName="Expander" Property="UIElement.Visibility" Value="{x:Static Visibility.Hidden}" />
                                <Trigger.Value>
                                    <s:Boolean>False</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                            <Trigger Property="TreeViewItem.IsSelected">
                                <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="TextElement.Foreground">
                                    <Setter.Value>
                                        <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                                    </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                    <s:Boolean>True</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="TreeViewItem.IsSelected">
                                        <Condition.Value>
                                            <s:Boolean>True</s:Boolean>
                                        </Condition.Value>
                                    </Condition>
                                    <Condition Property="Selector.IsSelectionActive">
                                        <Condition.Value>
                                            <s:Boolean>False</s:Boolean>
                                        </Condition.Value>
                                    </Condition>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                <Setter Property="TextElement.Foreground">
                                    <Setter.Value>
                                        <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                            <Trigger Property="UIElement.IsEnabled">
                                <Setter Property="TextElement.Foreground">
                                    <Setter.Value>
                                        <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                    </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                    <s:Boolean>False</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="CyanBrush" Color="#00BCD4" />
        <SolidColorBrush x:Key="PinkBrush" Color="#DB167C" />
        <SolidColorBrush x:Key="LimeBrush" Color="#0BE182" />

        <!-- つまみのデザイン。ここでは円（Ellipse）を描いていますが、他の図形や画像など、お好きにデザインしてください -->
        <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Ellipse Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Slider}, Mode=FindAncestor}}" Width="10" Height="10"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- このサンプルでは、簡潔に記述する為に全て Foreground を基準に色を決定しています。個別に指定する場合は、適宜書き換えてください -->
        <Style x:Key="CustomSliderStyle" TargetType="{x:Type Slider}">
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <!-- 横置きの場合 -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="25" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <!-- 上の目盛り -->
                                    <TickBar Grid.Row="0" x:Name="TopTick" Placement="Top" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Height="8" Opacity="0.64" Margin="0,0,0,2" />

                                    <!-- 下の目盛り -->
                                    <TickBar Grid.Row="2" x:Name="BottomTick" Placement="Bottom" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Height="8" Opacity="0.64" Margin="0,2,0,0" />

                                    <Track Grid.Row="1" x:Name="PART_Track">
                                        <!-- 減少側のトラック（レール） -->
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="Slider.DecreaseLarge" Background="{TemplateBinding Foreground}" Height="5" BorderBrush="{x:Null}" Opacity="0.2"/>
                                        </Track.DecreaseRepeatButton>

                                        <!-- 増加側のトラック（レール） -->
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="Slider.IncreaseLarge" Background="{TemplateBinding Foreground}" Height="5" BorderBrush="{x:Null}" Opacity="0.5"/>
                                        </Track.IncreaseRepeatButton>

                                        <!-- つまみ -->
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource SliderThumbStyle}"/>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                                <!-- TickPlacement の設定によって目盛りの表示を切り替え -->
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Slider.TickPlacement" Value="TopLeft">
                                        <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                                    </Trigger>
                                    <Trigger Property="Slider.TickPlacement" Value="BottomRight">
                                        <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                                    </Trigger>
                                    <Trigger Property="Slider.TickPlacement" Value="Both">
                                        <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                                        <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <!-- 縦置きの場合 -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="25" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <!-- 左の目盛り -->
                                    <TickBar Grid.Column="0" x:Name="LeftTick" Placement="Left" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Width="8" Opacity="0.64" Margin="0,0,2,0" />

                                    <!-- 右の目盛り -->
                                    <TickBar Grid.Column="2" x:Name="RightTick" Placement="Right" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Width="8" Opacity="0.64" Margin="2,0,0,0" />

                                    <Track Grid.Column="1" x:Name="PART_Track" IsDirectionReversed="true">
                                        <!-- 減少側のトラック（レール） -->
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="Slider.DecreaseLarge" Background="{TemplateBinding Foreground}" Width="5" BorderBrush="{x:Null}" Opacity="0.2"/>
                                        </Track.DecreaseRepeatButton>

                                        <!-- 増加側のトラック（レール） -->
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="Slider.IncreaseLarge" Background="{TemplateBinding Foreground}" Width="5" BorderBrush="{x:Null}" Opacity="0.5"/>
                                        </Track.IncreaseRepeatButton>

                                        <!-- つまみ -->
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource SliderThumbStyle}"/>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                                <!-- TickPlacement の設定によって目盛りの表示を切り替え -->
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Slider.TickPlacement" Value="TopLeft">
                                        <Setter TargetName="LeftTick" Property="Visibility" Value="Visible" />
                                    </Trigger>
                                    <Trigger Property="Slider.TickPlacement" Value="BottomRight">
                                        <Setter TargetName="RightTick" Property="Visibility" Value="Visible" />
                                    </Trigger>
                                    <Trigger Property="Slider.TickPlacement" Value="Both">
                                        <Setter TargetName="LeftTick" Property="Visibility" Value="Visible" />
                                        <Setter TargetName="RightTick" Property="Visibility" Value="Visible" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Expander 関連 -->
        <SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#FF000000"/>
        <SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FF000000"/>
        <SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#FF707070"/>
        <SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="#FF333333"/>
        <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#FF333333"/>
        <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="19"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="-90"/>
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse 
                                        x:Name="circle" 
                                        Fill="{StaticResource Expander.Static.Circle.Fill}" 
                                        HorizontalAlignment="Center" 
                                        Height="19" 
                                        Stroke="{StaticResource Expander.Static.Circle.Stroke}" 
                                        VerticalAlignment="Center" 
                                        Width="19"/>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                                </Grid>
                                <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="180"/>
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                                </Grid>
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="19"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="90"/>
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                                </Grid>
                                <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <!--<ColumnDefinition Width="19"/>-->
                                    <ColumnDefinition Width="12"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <!--<Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>-->
                                <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="12" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="12"/>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderStyle1" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                            <DockPanel>
                                <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Right">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Up">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Left">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Grid x:Name="RootLayout">
        <Grid.Resources>
            <!-- タブで表示するタイプ -->
            <DataTemplate
                DataType="{x:Type local:TabViewModel}">
                <TabControl    
                    SelectedIndex="{Binding SelectedIndex}"
                    SelectedItem="{Binding SelectedItem}"
                    ItemsSource="{Binding Tabs}">
                    <TabControl.ItemTemplate>
                        <DataTemplate>
                            <Border BorderBrush="{Binding Color}">
                                <StackPanel                                 
                                    Orientation="Horizontal">
                                    <TextBlock                                     
                                        Width="75"                                    
                                        Text="{Binding Alias}" 
                                        TextTrimming="CharacterEllipsis"  />
                                    <Button 
                                        Visibility="{Binding TabCloseButtonVisibility}"
                                        FontSize="4"
                                        Background="Black"
                                        Foreground="White"
                                        Height="8" Width="8"
                                        Content="X"                                    
                                        BorderThickness="0"
                                        Command="{Binding TabCloseCommand}"/>
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </TabControl.ItemTemplate>
                    <TabControl.ContentTemplate>
                        <DataTemplate>
                            <ContentControl 
                                Content="{Binding Content}"  />
                        </DataTemplate>
                    </TabControl.ContentTemplate>
                </TabControl>
            </DataTemplate>

            <!-- 通常タイプ -->
            <DataTemplate DataType="{x:Type local:NormalViewModel}">
                <ContentControl Content="{Binding Content}" />
            </DataTemplate>

            <DataTemplate
                DataType="{x:Type local:UserDirectoryViewModel}">
                <DockPanel
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch">
                    <StackPanel
                        Margin="10,0,0,0"
                        DockPanel.Dock="Left">
                        <TextBlock 
                            Margin="0,10,0,0"
                            FontSize="14"
                            Text="Open Project" />
                        <TextBlock
                            FontSize="10"
                            Margin="10,10,0,0"
                            FontWeight="Bold"
                            Text="固定されたプロジェクト" />
                        <ListBox
                            Width="350"
                            DockPanel.Dock="Top"
                            SelectedItem="{Binding SelectedProject}"
                            BorderThickness="0,0,0,0"                            
                            ItemsSource="{Binding FixedProjects}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel
                                        Margin="10,0,0,0"
                                        Orientation="Horizontal">
                                        <Image
                                            Height="30" Width="30"
                                            Source="{Binding Icon}"
                                            Stretch="UniformToFill" />
                                        <StackPanel
                                            Margin="10,0,0,0"
                                            Orientation="Vertical">
                                            <DockPanel VerticalAlignment="Stretch">
                                                <TextBlock 
                                                    DockPanel.Dock="Left"
                                                    FontSize="14"
                                                    FontWeight="Bold"
                                                    Text="{Binding Name}" />
                                                <Button 
                                                    Command="{Binding RemoveFixedProjectCommand}"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Right"
                                                    Content="&lt;"                                                    
                                                    FontSize="8"
                                                    Width="10"
                                                    Height="10" 
                                                    BorderThickness="0" 
                                                    Padding="0" />
                                            </DockPanel>
                                            <StackPanel
                                                Orientation="Horizontal">
                                                <TextBlock
                                                    Width="200"
                                                    FontSize="10"
                                                    Foreground="Gray"
                                                    TextTrimming="CharacterEllipsis"
                                                    Text="{Binding DirectoryName}" />
                                                <TextBlock
                                                    Margin="20,0,0,0"
                                                    Width="50"                                                                                                         
                                                    FontSize="10"
                                                    Foreground="Gray"
                                                    Text="{Binding LastUpdate}" />
                                            </StackPanel>
                                        </StackPanel>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger 
                                    EventName="MouseDoubleClick">
                                    <behaviors:InvokeCommandAction Command="{Binding SelectProjectCommand}" />
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </ListBox>
                        <TextBlock
                            FontSize="10"
                            Margin="10,10,0,0"
                            FontWeight="Bold"
                            Text="最近開いたプロジェクト" />
                        <ListBox
                            Width="350"
                            DockPanel.Dock="Top"
                            SelectedItem="{Binding SelectedProject}"
                            BorderThickness="0,0,0,0"                            
                            ItemsSource="{Binding CurrentProjects}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel
                                        Margin="10,0,0,0"
                                        Orientation="Horizontal">
                                        <Image
                                            Height="30" Width="30"
                                            Source="{Binding Icon}"
                                            Stretch="UniformToFill" />
                                        <StackPanel
                                            Margin="10,0,0,0"
                                            Orientation="Vertical">
                                            <DockPanel VerticalAlignment="Stretch">
                                                <TextBlock 
                                                    DockPanel.Dock="Left"
                                                    FontSize="14"
                                                    FontWeight="Bold"
                                                    Text="{Binding Name}" />
                                                <Button 
                                                    Command="{Binding FixProjectCommand}"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Right"
                                                    Content=">"                                                    
                                                    FontSize="8"
                                                    Width="10"
                                                    Height="10" 
                                                    BorderThickness="0" 
                                                    Padding="0" />
                                            </DockPanel>
                                            <StackPanel
                                                Orientation="Horizontal">
                                                <TextBlock
                                                    Width="200"
                                                    FontSize="10"
                                                    Foreground="Gray"
                                                    TextTrimming="CharacterEllipsis"
                                                    Text="{Binding DirectoryName}" />
                                                <TextBlock
                                                    Margin="20,0,0,0"
                                                    Width="50"                                                                                                         
                                                    FontSize="10"
                                                    Foreground="Gray"
                                                    Text="{Binding LastUpdate}" />
                                            </StackPanel>
                                        </StackPanel>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger 
                                    EventName="MouseDoubleClick">
                                    <behaviors:InvokeCommandAction Command="{Binding SelectProjectCommand}" />
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </ListBox>
                    </StackPanel>
                    <StackPanel
                        Margin="30,0,0,0"
                        Orientation="Vertical">
                        <TextBlock 
                            Margin="0,10,0,0"
                            FontSize="14"
                            Text="New Project" />
                        <StackPanel
                            Margin="0,10,0,0"
                            Orientation="Horizontal"
                            DockPanel.Dock="Top">
                            <TextBlock 
                                Width="100"
                                Text="プロジェクトの種類" />
                            <ComboBox
                                Width="250"
                                SelectedIndex="0"
                                SelectedValue="{Binding ProjectKind}"
                                ItemsSource="{Binding ProjectKindList}" />
                        </StackPanel>
                        <StackPanel
                            Margin="0,5,0,0"
                            Orientation="Horizontal"
                            DockPanel.Dock="Top">
                            <TextBlock 
                                Width="100"
                                Text="ディレクトリ名" />
                            <TextBox 
                                Width="250"
                                Text="{Binding UserDirectoryName}" />
                            <Button 
                                Width="20"
                                Content=". . ."
                                Command="{Binding InputBoxCommand}" />
                        </StackPanel>
                        <StackPanel
                            Margin="0,5,0,0"
                            Orientation="Horizontal"
                            DockPanel.Dock="Top">
                            <TextBlock 
                                Width="100"
                                Text="プロジェクト名" />
                            <TextBox 
                                Width="250"
                                Text="{Binding ProjectName}" />
                        </StackPanel>
                        <StackPanel
                            DockPanel.Dock="Top">
                            <TextBlock 
                                Margin="100,0,0,0"
                                Text="{Binding ProjectDirectoryName}" />
                        </StackPanel>
                        <StackPanel
                            Margin="0,5,0,0"
                            HorizontalAlignment="Stretch"
                            DockPanel.Dock="Top">
                            <StackPanel
                                Margin="250,0,0,0"
                                Orientation="Horizontal">
                                <Button
                                    Width="50"
                                    Height="25"
                                    Content="開く"
                                    Command="{Binding OpenProjectCommand}"/>
                                <Button
                                    Width="50"
                                    Height="25"
                                    Content="作成"
                                    Command="{Binding AddProjectCommand}"/>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel
                            DockPanel.Dock="Top">
                            <TextBlock
                                Text="{Binding Message}"/>
                        </StackPanel>
                    </StackPanel>
                </DockPanel>
            </DataTemplate>

            <DataTemplate
                DataType="{x:Type local:ProjectViewModel}">
                <StackPanel Margin="10,0,0,0">
                    <Label 
                        HorizontalAlignment="Right"
                        Background="Gray"
                        Foreground="White"
                        FontWeight="bold"
                        Content="{Binding Name}" />
                    <StackPanel Orientation="Horizontal">
                        <TextBlock 
                            Width="150"
                            Text="プロジェクト名" />
                        <TextBox
                            Margin="10,0,0,0"
                            Width="400"
                            Text="{Binding Name}" />
                    </StackPanel>
                    <StackPanel 
                        Orientation="Horizontal"
                        Margin="0,10,0,0">
                        <TextBlock 
                            Width="150"
                            Text="プロジェクトディレクトリ" />
                        <TextBox
                            Margin="10,0,0,0"
                            Width="400"
                            Text="{Binding DirectoryName}" />
                        <Button 
                            Content=". . ."
                            Command="{Binding FolderBrowserDialogCommand}" 
                            CommandParameter="{Binding DirectoryName}" />
                    </StackPanel>
                    <StackPanel 
                        Orientation="Horizontal"
                        Margin="0,10,0,0">
                        <TextBlock 
                            Width="150"
                            Text="プロジェクト種類" />
                        <TextBlock
                            Margin="10,0,0,0"
                            Width="400"
                            Text="{Binding Kind}" />
                    </StackPanel>
                    <StackPanel 
                        Orientation="Horizontal"
                        Margin="0,10,0,0">
                        <TextBlock 
                            Width="150"
                            Text="プロジェクトアイコン" />
                        <TextBox
                            Margin="10,0,0,0"
                            Width="400"
                            Text="{Binding IconFileName}" />
                        <Button 
                            Content=". . ."
                            Command="{Binding InputFileDialogCommand}" 
                            CommandParameter="{Binding IconFileName}" />
                        <Image 
                            Margin="10,0,0,0"
                            Height="30"
                            Width="30"
                            Source="{Binding Icon}" />
                    </StackPanel>
                    <StackPanel 
                        Orientation="Horizontal"
                        Margin="0,10,0,0">
                        <TextBlock 
                            Width="150"
                            Text="Project Information File" />
                        <TextBox
                            Margin="10,0,0,0"
                            Width="400"
                            Text="{Binding ProjectInfoFileName}" />
                        <Button 
                            Content=". . ."
                            Command="{Binding InputFileDialogCommand}"
                            CommandParameter="{Binding ProjectInfoFileName}" />
                        <Button 
                            Content="Edit"
                            Command="{Binding EditFileCommand}"
                            CommandParameter="{Binding ProjectInfoFileName}"/>
                    </StackPanel>
                    <StackPanel 
                        Orientation="Horizontal"
                        Margin="0,10,0,0">
                        <TextBlock 
                            Width="150"
                            Text="Model File" />
                        <TextBox
                            Margin="10,0,0,0"
                            Width="400"
                            Text="{Binding ModelFileName}" />
                        <Button 
                            Content=". . ."
                            Command="{Binding InputFileDialogCommand}" 
                            CommandParameter="{Binding ModelFileName}" />
                        <Button 
                            Content="Edit"
                            Command="{Binding EditFileCommand}"
                            CommandParameter="{Binding ModelFileName}"/>
                    </StackPanel>
                    <StackPanel 
                        Orientation="Horizontal"
                        Margin="0,10,0,0">
                        <TextBlock 
                            Width="150"
                            Text="ViewModel File" />
                        <TextBox
                            Margin="10,0,0,0"
                            Width="400"
                            Text="{Binding ViewModelFileName}" />
                        <Button 
                            Content=". . ."
                            Command="{Binding InputFileDialogCommand}" 
                            CommandParameter="{Binding ViewModelFileName}" />
                        <Button 
                            Content="Edit"
                            Command="{Binding EditFileCommand}"
                            CommandParameter="{Binding ViewModelFileName}"/>
                    </StackPanel>
                </StackPanel>
            </DataTemplate>

            <!--<DataTemplate
                DataType="{x:Type local:ConnectionViewModel}">
                <StackPanel>
                    <StackPanel 
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center">
                        <TextBlock 
                            Text="{Binding InitializeMessage}" 
                            Width="500" />
                        <StackPanel 
                            Orientation="Horizontal" >
                            <TextBlock 
                                Text="サーバ名" 
                                Width="100"/>
                            <TextBox 
                                Text="{Binding ServerName}"
                                Width="300" />
                        </StackPanel>
                        <TextBlock 
                            Text="{Binding ServerNameError}"/>
                        <StackPanel 
                            Orientation="Horizontal" >
                            <TextBlock 
                                Text="データベース名"
                                Width="100"/>
                            <TextBox
                                Text="{Binding DataBaseName}"
                                Width="300"/>
                        </StackPanel>
                        <TextBlock 
                            Text="{Binding DataBaseNameError}"/>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock 
                                Text="接続文字列"
                                Width="100"/>
                            <TextBox
                                Text="{Binding ConnectionString}"
                                Width="300"/>
                        </StackPanel>
                        <TextBlock 
                            Text="{Binding ConnectionStringError}"/>
                    </StackPanel>
                    <StackPanel 
                        Orientation="Horizontal"
                        VerticalAlignment="Bottom"
                        HorizontalAlignment="Right">
                        <Button
                            Command="{Binding ConnectionCommand}"
                            Content="Connection"
                            Width="100" />
                        <Button
                            Content="Close" 
                            Width="100" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>-->

            <HierarchicalDataTemplate
                DataType="{x:Type local:ServerModel}"
                ItemsSource="{Binding DataBases}">
                <StackPanel Orientation="Horizontal">
                    <CheckBox 
                        Margin="5,3,3,3"
                        VerticalContentAlignment="Center"
                        IsEnabled="{Binding IsEnabled}"
                        IsChecked="{Binding IsChecked}" />
                    <TextBlock 
                        Margin="5,3,3,3"
                        IsEnabled="{Binding IsEnabled}"
                        Text="{Binding Name}" />
                </StackPanel>
                <!--<HierarchicalDataTemplate.ItemContainerStyle>
                    <Style TargetType="TreeViewItem">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
                    </Style>
                </HierarchicalDataTemplate.ItemContainerStyle>-->
            </HierarchicalDataTemplate>

            <HierarchicalDataTemplate
                DataType="{x:Type local:DataBaseModel}"
                ItemsSource="{Binding DataTables}" >
                <StackPanel Orientation="Horizontal">
                    <CheckBox 
                        Margin="5,3,3,3"
                        VerticalContentAlignment="Center"
                        IsEnabled="{Binding IsEnabled}"
                        IsChecked="{Binding IsChecked}"/>
                    <!--<Image 
                        Height="15"
                        Width="15"
                        Source="{StaticResource DataBaseImage}" />-->
                    <TextBlock 
                        Margin="5,3,3,3"
                        IsEnabled="{Binding IsEnabled}"
                        Text="{Binding Name}" />
                </StackPanel>
                <!--<HierarchicalDataTemplate.ItemContainerStyle>
                    <Style TargetType="TreeViewItem">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
                    </Style>
                </HierarchicalDataTemplate.ItemContainerStyle>-->
            </HierarchicalDataTemplate>

            <DataTemplate
                DataType="{x:Type local:DataTableModel}">
                <StackPanel Orientation="Horizontal">
                    <CheckBox 
                        Margin="5,3,3,3"
                        VerticalContentAlignment="Center"
                        IsEnabled="{Binding IsEnabled}"
                        IsChecked="{Binding IsChecked}"/>
                    <!--<Image 
                        Height="15"
                        Width="15"
                        Source="{StaticResource DataTableImage}" />-->
                    <TextBlock 
                        Margin="5,3,3,3"
                        IsEnabled="{Binding IsEnabled}"
                        Text="{Binding Name}" />
                </StackPanel>
            </DataTemplate>

            <DataTemplate                
                DataType="{x:Type local:DBExplorerViewModel}">
                <DockPanel
                    VerticalAlignment="Stretch"
                    HorizontalAlignment="Stretch"
                    LastChildFill="True">
                    <StackPanel 
                        DockPanel.Dock="Top"
                        Orientation="Horizontal">
                        <!--<Button
                            Template="{StaticResource DBReLoadButton}"
                            Command="{Binding DBLoadCommand}" />
                        <Button
                            Template="{StaticResource SaveButton}"
                            Command="{Binding SaveCommand}" />-->
                    </StackPanel>

                    <TreeView
                        ScrollViewer.VerticalScrollBarVisibility="Visible"
                        ScrollViewer.HorizontalScrollBarVisibility="Visible"                        
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch"
                        BorderThickness="0,0,0,0">

                        <TreeViewItem
                            FontSize="11"
                            Header="MyDataBase"
                            ItemsSource="{Binding Server.DataBases}">
                            <!--<TreeViewItem.ItemContainerStyle>
                                <Style TargetType="TreeViewItem">
                                    <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
                                </Style>
                            </TreeViewItem.ItemContainerStyle>-->
                        </TreeViewItem>

                        <TreeViewItem                            
                            FontSize="11"
                            Header="Menus"
                            ItemsSource="{Binding MenuFolder.Menus}">
                            <TreeViewItem.ItemContainerStyle>
                                <Style TargetType="TreeViewItem">
                                    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                                </Style>
                            </TreeViewItem.ItemContainerStyle>
                        </TreeViewItem>
                    </TreeView>
                </DockPanel>
            </DataTemplate>

            <ContextMenu x:Key="ViewItemContextMenu">
                <MenuItem 
                    Header="名前の変更"
                    Command="{Binding ChangeAliasCommand}"/>
                <!--<MenuItem 
                    Header="削除"
                    Command="{Binding DeleteViewCommand}"/>-->
            </ContextMenu>

            <DataTemplate                
                DataType="{x:Type local:ViewExplorerViewModel}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TreeView                         
                        DockPanel.Dock="Top"
                        Grid.Row="0"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Stretch"
                        ScrollViewer.VerticalScrollBarVisibility="Visible"
                        ScrollViewer.HorizontalScrollBarVisibility="Visible">
                        <TreeViewItem
                            Style="{StaticResource TreeViewItemStyle}"
                            FontSize="{Binding FontSize, Mode=OneWay}"
                            Header="Views"
                            ItemsSource="{Binding Views}">
                            <TreeViewItem.ItemTemplate>
                                <HierarchicalDataTemplate>
                                    <Grid HorizontalAlignment="Stretch">
                                        <StackPanel 
                                            Orientation="Horizontal"
                                            Grid.Column="0">
                                            <Image
                                                Width="12" Height="12"
                                                Grid.Column="0"
                                                Source="{Binding VisibleIcon}" />
                                            <TextBlock            
                                                Margin="5,0,0,0"
                                                Visibility="{Binding BlockVisibility}"
                                                ContextMenu="{Binding Source={StaticResource ResourceKey=ViewItemContextMenu}}"
                                                Text="{Binding Alias}" />
                                            <TextBox          
                                                Margin="5,0,0,0"
                                                Visibility="{Binding BoxVisibility}"
                                                ContextMenu="{Binding Source={StaticResource ResourceKey=ViewItemContextMenu}}"
                                                Text="{Binding Alias}" />
                                        </StackPanel>
                                    </Grid>
                                </HierarchicalDataTemplate>
                            </TreeViewItem.ItemTemplate>
                            <TreeViewItem.ItemContainerStyle>
                                <Style TargetType="TreeViewItem">
                                    <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
                                    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                                </Style>
                            </TreeViewItem.ItemContainerStyle>
                        </TreeViewItem>
                    </TreeView>
                    <Expander 
                        Header="Settings" 
                        Grid.Row="1"
                        Style="{StaticResource ExpanderStyle1}">
                        <StackPanel 
                            Orientation="Horizontal"
                            Margin="5,0,0,0">
                            <TextBlock 
                                VerticalAlignment="Center"
                                Text="Size: " />
                            <Slider
                                Width="100"
                                Value="{Binding FontSize}"
                                Minimum="6" Maximum="18"                        
                                SmallChange="1" LargeChange="1" TickFrequency="1"
                                Style="{StaticResource CustomSliderStyle}"
                                Orientation="Horizontal" />
                            <TextBlock 
                                VerticalAlignment="Center"
                                Margin="5,0,0,0"
                                Text="{Binding FontSize, Mode=OneWay}" />
                        </StackPanel>
                    </Expander>
                </Grid>
            </DataTemplate>


            <!--<DataTemplate                
                DataType="{x:Type local:ViewItemModel}">
                <DockPanel 
                    Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeViewItem}}"
                    LastChildFill="True">
                    <Image 
                        Margin="0,0,5,0"
                        Height="12" Width="12"
                        Source="{Binding Icon}" />
                    <TextBlock            
                        Visibility="{Binding BlockVisibility}"
                        ContextMenu="{Binding Source={StaticResource ResourceKey=ViewItemContextMenu}}"
                        Text="{Binding Alias}" />
                    <TextBox            
                        Visibility="{Binding BoxVisibility}"
                        ContextMenu="{Binding Source={StaticResource ResourceKey=ViewItemContextMenu}}"
                        Text="{Binding Alias}" />
                </DockPanel>
            </DataTemplate>-->

            <DataTemplate                
                DataType="{x:Type local:ProjectExplorerViewModel}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TreeView                         
                        DockPanel.Dock="Top"
                        Grid.Row="0"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Stretch"
                        ScrollViewer.VerticalScrollBarVisibility="Visible"
                        ScrollViewer.HorizontalScrollBarVisibility="Visible">
                        <TreeViewItem
                            Style="{StaticResource TreeViewItemStyle}"
                            FontSize="{Binding FontSize, Mode=OneWay}"
                            Header="Projects"
                            ItemsSource="{Binding Projects}">
                            <TreeViewItem.ItemTemplate>
                                <HierarchicalDataTemplate>
                                    <Grid HorizontalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Image
                                            Width="12" Height="12"
                                            Grid.Column="0"
                                            Source="{Binding Icon}" />
                                        <StackPanel 
                                            Margin="5,0,0,0"
                                            Grid.Column="1"
                                            HorizontalAlignment="Stretch"
                                            Orientation="Horizontal">
                                            <TextBlock 
                                                Text="{Binding Name}" />
                                            <TextBlock 
                                                Text="{Binding ActiveStatus}" />
                                        </StackPanel>
                                    </Grid>
                                </HierarchicalDataTemplate>
                            </TreeViewItem.ItemTemplate>
                            <TreeViewItem.ItemContainerStyle>
                                <Style TargetType="TreeViewItem">
                                    <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
                                    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                                </Style>
                            </TreeViewItem.ItemContainerStyle>
                        </TreeViewItem>
                    </TreeView>
                </Grid>
            </DataTemplate>


            <DataTemplate                
                DataType="{x:Type local:RpaProjectMenuViewModel}">
                <StackPanel 
                    Margin="10,0,0,0"
                    Orientation="Horizontal">
                    <Button
                        Command="{Binding RpaLaunchCommand}"
                        Background="Transparent"
                        Width="20"
                        Height="20"
                        BorderThickness="0">
                        <Image Source="{Binding StartupIcon}" />
                    </Button>
                    <Button
                        Command="{Binding RobotStartCommand}"
                        Content="▶"
                        Margin="5,0,0,0"
                        Width="20" Height="20"
                        Background="Transparent"
                        BorderThickness="0">
                    </Button>
                    <Button
                        Command="{Binding RobotUpdateCommand}"
                        Margin="5,0,0,0"
                        Width="20" Height="20"
                        Background="Transparent"
                        BorderThickness="0">
                        <Image Source="{Binding DownloadIcon}" />
                    </Button>
                </StackPanel>
            </DataTemplate>

            <DataTemplate                
                DataType="{x:Type local:RpaProjectViewModel}">
                <StackPanel Margin="10,0,0,0">
                    <StackPanel 
                        Margin="0,10,0,0"
                        Orientation="Horizontal">
                        <TextBlock 
                            Width="150"
                            Text="ルートディレクトリ名" />
                        <TextBox
                            Width="400"
                            Text="{Binding RootDirectoryName}" />
                        <Button
                            Content=". . ."
                            Command="{Binding FolderBrowserDialogCommand}"
                            CommandParameter="{Binding RootDirectoryName}" />
                    </StackPanel>
                    <StackPanel 
                        Margin="0,10,0,0"
                        Orientation="Horizontal">
                        <TextBlock 
                            Width="150"
                            Text="システムディレクトリ名" />
                        <TextBox
                            Width="400"
                            Text="{Binding SystemDirectoryName}" />
                        <Button
                            Content=". . ."
                            Command="{Binding FolderBrowserDialogCommand}"
                            CommandParameter="{Binding SystemDirectoryName}" />
                    </StackPanel>
                    <StackPanel 
                        Margin="0,10,0,0"
                        Orientation="Horizontal">
                        <TextBlock 
                            Width="150"
                            Text="ユーザーディレクトリ名" />
                        <TextBox
                            Width="400"
                            Text="{Binding UserDirectoryName}" />
                        <Button
                            Content=". . ."
                            Command="{Binding FolderBrowserDialogCommand}"
                            CommandParameter="{Binding UserDirectoryName}" />
                    </StackPanel>
                    <StackPanel 
                        Margin="0,10,0,0"
                        Orientation="Horizontal">
                        <TextBlock 
                            Width="150"
                            Text="Python Path" />
                        <TextBox
                            Width="400"
                            Text="{Binding PythonPathName}" />
                        <Button
                            Content=". . ."
                            Command="{Binding FolderBrowserDialogCommand}"
                            CommandParameter="{Binding PythonPathName}" />
                    </StackPanel>
                    <StackPanel 
                        Margin="0,10,0,0"
                        Orientation="Horizontal">
                        <TextBlock Text="{Binding ErrorMessage}" />
                    </StackPanel>
                    <StackPanel 
                        Margin="540,30,0,0"
                        Orientation="Horizontal">
                        <Button
                            Height="30"
                            Width="30"
                            Content="作成"
                            Command="{Binding LaunchCommand}" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>

            <DataTemplate                
                DataType="{x:Type local:RpaViewModel}">
                <StackPanel Margin="10,0,0,0">
                    <StackPanel 
                        Margin="0,10,0,0"
                        Orientation="Horizontal">
                        <TextBlock 
                            Width="150"
                            Text="状態" />
                        <TextBlock Text="{Binding StatusText, Mode=OneWay}" />
                    </StackPanel>
                    <StackPanel 
                        Margin="0,10,0,0"
                        Orientation="Horizontal">
                        <TextBlock 
                            Width="150"
                            Text="ルートプロジェクト名" />
                        <TextBox
                            Width="400"
                            Text="{Binding RootProjectName}" />
                        <Button
                            Content=". . ."
                            Command="{Binding FolderBrowserDialogCommand}"
                            CommandParameter="{Binding RootProjectName}" />
                    </StackPanel>
                    <StackPanel 
                        Margin="0,10,0,0"
                        Orientation="Horizontal">
                        <TextBlock 
                            Width="150"
                            Text="プロジェクト名" />
                        <TextBox
                            Width="400"
                            Text="{Binding UserProjectName}" />
                        <Button
                            Content=". . ."
                            Command="{Binding FolderBrowserDialogCommand}"
                            CommandParameter="{Binding UserProjectName}" />
                    </StackPanel>
                    <StackPanel 
                        Margin="0,10,0,0"
                        Orientation="Horizontal">
                        <TextBlock 
                            Width="150"
                            Text="実行パラメータ" />
                        <TextBox
                            Width="400"
                            Text="{Binding RunParameter}" />
                    </StackPanel>
                    <StackPanel 
                        Margin="0,10,0,0"
                        Orientation="Horizontal">
                        <TextBlock 
                            Text="{Binding ErrorMessage}" />
                    </StackPanel>
                    <StackPanel 
                        Margin="450,10,0,0"
                        Orientation="Horizontal">
                        <Button
                            Command="{Binding ConnectProjectCommand}"
                            Content="接続"
                            Width="30" Height="20" />
                        <Button
                            Command="{Binding DeleteProjectCommand}"
                            Margin="5,0,0,0"
                            Content="削除"
                            Width="30" Height="20" />
                        <Button
                            Command="{Binding RunCommand}"
                            Margin="5,0,0,0"
                            Content="実行"
                            Width="30" Height="20" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>


            <DataTemplate
                DataType="{x:Type local:HistoryViewModel}">
                <DockPanel
                    LastChildFill="True">
                    <StackPanel                        
                        Orientation="Horizontal"
                        DockPanel.Dock="Top">
                    </StackPanel>
                    <TextBox
                        x:Name="HistoryBox"
                        DockPanel.Dock="Top"         
                        Text="{Binding History.DisplayContents, Mode=OneWay}" 
                        IsReadOnly="True"                        
                        VerticalScrollBarVisibility="Visible"
                        HorizontalScrollBarVisibility="Visible"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch"                        
                        ScrollViewer.CanContentScroll="False" 
                        UseLayoutRounding="False" 
                        AllowDrop="True" 
                        Height="Auto"/>
                </DockPanel>
            </DataTemplate>

            <DataTemplate
                DataType="{x:Type local:ConnectionViewModel}">
                <StackPanel>
                    <StackPanel 
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center">
                        <TextBlock 
                            Text="{Binding InitializeMessage}" 
                            Width="500" />
                        <StackPanel 
                            Orientation="Horizontal" >
                            <TextBlock 
                                Text="サーバ名" 
                                Width="100"/>
                            <TextBox 
                                Text="{Binding ServerName}"
                                Width="300" />
                        </StackPanel>
                        <TextBlock 
                            Text="{Binding ServerNameError}"/>
                        <StackPanel 
                            Orientation="Horizontal" >
                            <TextBlock 
                                Text="データベース名"
                                Width="100"/>
                            <TextBox
                                Text="{Binding DataBaseName}"
                                Width="300"/>
                        </StackPanel>
                        <TextBlock 
                            Text="{Binding DataBaseNameError}"/>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock 
                                Text="接続文字列"
                                Width="100"/>
                            <TextBox
                                Text="{Binding ConnectionString}"
                                Width="300"/>
                        </StackPanel>
                        <TextBlock 
                            Text="{Binding ConnectionStringError}"/>
                    </StackPanel>
                    <StackPanel 
                        Orientation="Horizontal"
                        VerticalAlignment="Bottom"
                        HorizontalAlignment="Right">
                        <Button
                            Command="{Binding ConnectionCommand}"
                            Content="Connection"
                            Width="100" />
                        <Button
                            Content="Close" 
                            Width="100" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>

            <DataTemplate
                DataType="{x:Type local:MenuViewModel}">
                <StackPanel 
                    Grid.Row="0" 
                    Grid.Column="0" Grid.ColumnSpan="3"
                    Orientation="Horizontal">
                    <Menu>
                        <MenuItem
                            Header="ファイル(F)"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            Margin="0,0,5,0">
                            <MenuItem 
                                Header="開く"
                                Command="{Binding OpenProjectCommand}" />
                            <MenuItem 
                                Header="上書き保存"
                                Command="{Binding ResaveProjectCommand}" />
                            <MenuItem 
                                Header="保存"
                                Command="{Binding SaveProjectCommand}" />
                        </MenuItem>
                        <MenuItem
                            Header="編集(F)"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            Margin="0,0,5,0" />
                        <MenuItem
                            Header="表示(V)"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            Margin="0,0,5,0">
                            <MenuItem 
                                Header="プロジェクトエクスプローラー"
                                Command="{Binding ShowProjectExplorerCommand}" />
                            <MenuItem 
                                Header="ビューエクスプローラー"
                                Command="{Binding ShowViewExplorerCommand}" />
                        </MenuItem>
                        <MenuItem
                            Header="プロジェクト(P)"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            Margin="0,0,5,0">
                            <MenuItem 
                                Header="プロジェクトの設定"
                                Command="{Binding ShowProjectSettingCommand}" />
                        </MenuItem>
                    </Menu>
                </StackPanel>
            </DataTemplate>

            <!-- 旧仕様 -->
            <DataTemplate DataType="{x:Type local:SingleViewModel}">
                <Grid>
                    <ContentControl
                        Content="{Binding Content}" />
                </Grid>
            </DataTemplate>

            <!-- 旧仕様 -->
            <DataTemplate 
                x:Name="MultiViewLayout"
                DataType="{x:Type local:MultiViewModel}">
                <Grid x:Name="MultiViewData">
                    <!--<Grid.Resources>
                        <local:DoubleGridLengthConverter x:Key="DoubleGridLengthConverter" />
                    </Grid.Resources>-->
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25" />
                        <RowDefinition Height="25"  />
                        <RowDefinition Height="{Binding MainGridHeight}" />
                        <RowDefinition Height="5" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="{Binding RightGridWidth}" />
                    </Grid.ColumnDefinitions>
                    <ContentControl
                        Grid.Row="0"
                        Grid.Column="0" Grid.ColumnSpan="4"
                        Content="{Binding MenuViewContent}" />
                    <ContentControl
                        Grid.Row="1"
                        Grid.Column="0" Grid.ColumnSpan="4"
                        Content="{Binding ProjectMenuViewContent}" />
                    <ContentControl
                        x:Name="ExplorerView"
                        Grid.Row="2" Grid.RowSpan="3"
                        Grid.Column="0"
                        Content="{Binding ExplorerViewContent}" />
                    <GridSplitter                        
                        Grid.Row="2" Grid.RowSpan="3"
                        Grid.Column="1"
                        ResizeDirection="Columns"
                        ResizeBehavior="PreviousAndNext"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch" />
                    <ContentControl
                        x:Name="MainView"
                        Grid.Row="2"            
                        Grid.Column="2"              
                        Content="{Binding MainViewContent}" />
                    <GridSplitter
                        Grid.Row="3"
                        Grid.Column="2"
                        ResizeDirection="Rows"                
                        ResizeBehavior="PreviousAndNext" 
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch" />
                    <ContentControl
                        x:Name="HistoryView"
                        Grid.Row="4"
                        Grid.Column="2"           
                        Content="{Binding HistoryViewContent}" />
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="{x:Type local:FlexibleViewModel}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="*" />
                        <!--<ColumnDefinition Width="{Binding ContentGridWidth}" />
                        <ColumnDefinition Width="{Binding HorizontalSplitterWidth}" />
                        <ColumnDefinition Width="{Binding RightGridWidth}" />-->
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="5" />
                        <RowDefinition Height="*" />
                        <!--<ColumnDefinition Height="{Binding ContentGridHeight}" />
                        <ColumnDefinition Height="{Binding HorizontalSplitterHeight}" />
                        <ColumnDefinition Height="{Binding BottomGridHeight}" />-->
                    </Grid.RowDefinitions>
                    <StackPanel 
                        Grid.Row="0" Grid.Column="0">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Hight=" />
                            <!--<TextBlock Text="{Binding ContentViewHeight}" />-->
                            <TextBlock Text="{Binding ElementName=MainView, Path=ActualHeight}" />
                            <TextBlock Text=", " />
                            <TextBlock Text="Width=" />
                            <!--<TextBlock Text="{Binding ContentViewWidth}" />-->
                            <TextBlock Text="{Binding ElementName=MainView, Path=ActualWidth}" />
                        </StackPanel>
                        <ContentControl
                            x:Name="MainView" 
                            SizeChanged="MainView_SizeChanged"
                            Content="{Binding MainContent}" />
                    </StackPanel>
                    <StackPanel
                        Grid.Row="0" Grid.Column="2">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="RightWidth=" />
                            <!--<TextBlock Text="{Binding RightViewWidth}" />-->
                            <TextBlock Text="{Binding ElementName=RightView, Path=ActualWidth}" />
                        </StackPanel>
                        <ContentControl
                            x:Name="RightView"        
                            SizeChanged="RightView_SizeChanged"
                            Content="{Binding RightContent}" />
                    </StackPanel>
                    <StackPanel
                        Grid.Row="2" Grid.Column="0">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="BottomHeight=" />
                            <!--<TextBlock Text="{Binding BottomViewHeight}" />-->
                            <TextBlock Text="{Binding ElementName=BottomView, Path=ActualHeight}" />
                        </StackPanel>
                        <ContentControl
                            x:Name="BottomView"
                            SizeChanged="BottomView_SizeChanged"
                            Content="{Binding BottomContent}" />
                    </StackPanel>
                    <GridSplitter
                        x:Name="HorizontalSplitter"
                        IsEnabled="{Binding IsHorizontalSplitterEnabled}"
                        Grid.Row="0" Grid.RowSpan="2"
                        Grid.Column="1"                                         
                        ResizeDirection="Columns"                
                        ResizeBehavior="PreviousAndNext"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch" />
                    <GridSplitter
                        x:Name="VerticalSplitter"                        
                        IsEnabled="{Binding IsVerticalSplitterEnabled}"
                        Grid.Column="0" Grid.ColumnSpan="2"
                        Grid.Row="1"
                        ResizeDirection="Rows"
                        ResizeBehavior="PreviousAndNext"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch" />
                </Grid>
            </DataTemplate>
        </Grid.Resources>
        
        <ContentControl Content="{Binding Content}" />
    </Grid>
</Window>
