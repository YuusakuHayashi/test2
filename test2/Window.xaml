<Window x:Class="Window"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:test2"
        mc:Ignorable="d"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        Title="Window" Height="450" Width="800">
    <Window.Resources>
        <Style TargetType="TreeViewItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem" xmlns:s="clr-namespace:System;assembly=mscorlib">
                        <Grid HorizontalAlignment="Stretch">
                            <!--<Grid>-->
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="19" />
                                <ColumnDefinition Width="*"/>
                                <!-- Change to expand width of tree items to base TreeView size (expand to right edge) -->
                                <!--<ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />-->
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <ToggleButton IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsExpanded,Mode=TwoWay}" ClickMode="Press" Name="Expander">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Style.Resources>
                                            <ResourceDictionary />
                                        </Style.Resources>
                                        <Setter Property="UIElement.Focusable">
                                            <Setter.Value>
                                                <s:Boolean>False</s:Boolean>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="FrameworkElement.Width">
                                            <Setter.Value>
                                                <s:Double>16</s:Double>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="FrameworkElement.Height">
                                            <Setter.Value>
                                                <s:Double>16</s:Double>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Border Padding="5,5,5,5" Background="#00FFFFFF" Width="30" Height="30">
                                                        <Path Fill="#00FFFFFF" Stroke="#FF989898" Name="ExpandPath">
                                                            <Path.Data>
                                                                <!-- マークを変えるにはここの値を変える -->
                                                                <PathGeometry Figures="M0,0L0,05L05,0z" />
                                                                <!-- <PathGeometry Figures="M0,0L0,10L10,0z" /> -->
                                                            </Path.Data>
                                                            <Path.RenderTransform>
                                                                <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                            </Path.RenderTransform>
                                                        </Path>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="UIElement.IsMouseOver">
                                                            <Setter TargetName="ExpandPath" Property="Shape.Stroke">
                                                                <Setter.Value>
                                                                    <SolidColorBrush>#FF1BBBFA</SolidColorBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter TargetName="ExpandPath" Property="Shape.Fill">
                                                                <Setter.Value>
                                                                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Trigger.Value>
                                                                <s:Boolean>True</s:Boolean>
                                                            </Trigger.Value>
                                                        </Trigger>
                                                        <Trigger Property="ToggleButton.IsChecked">
                                                            <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                                                                <Setter.Value>
                                                                    <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter TargetName="ExpandPath" Property="Shape.Fill">
                                                                <Setter.Value>
                                                                    <SolidColorBrush>#FF595959</SolidColorBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter TargetName="ExpandPath" Property="Shape.Stroke">
                                                                <Setter.Value>
                                                                    <SolidColorBrush>#FF262626</SolidColorBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Trigger.Value>
                                                                <s:Boolean>True</s:Boolean>
                                                            </Trigger.Value>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True" Grid.Column="1">
                                <ContentPresenter Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentSource="Header" Name="PART_Header" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Border>
                            <ItemsPresenter Name="ItemsHost" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2"/>
                            <!--<ItemsPresenter Name="ItemsHost" Grid.Column="1" Grid.Row="1"/>-->
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TreeViewItem.IsExpanded">
                                <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="{x:Static Visibility.Collapsed}" />
                                <Trigger.Value>
                                    <s:Boolean>False</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                            <Trigger Property="ItemsControl.HasItems">
                                <Setter TargetName="Expander" Property="UIElement.Visibility" Value="{x:Static Visibility.Hidden}" />
                                <Trigger.Value>
                                    <s:Boolean>False</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                            <Trigger Property="TreeViewItem.IsSelected">
                                <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="TextElement.Foreground">
                                    <Setter.Value>
                                        <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                                    </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                    <s:Boolean>True</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="TreeViewItem.IsSelected">
                                        <Condition.Value>
                                            <s:Boolean>True</s:Boolean>
                                        </Condition.Value>
                                    </Condition>
                                    <Condition Property="Selector.IsSelectionActive">
                                        <Condition.Value>
                                            <s:Boolean>False</s:Boolean>
                                        </Condition.Value>
                                    </Condition>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                <Setter Property="TextElement.Foreground">
                                    <Setter.Value>
                                        <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                            <Trigger Property="UIElement.IsEnabled">
                                <Setter Property="TextElement.Foreground">
                                    <Setter.Value>
                                        <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                    </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                    <s:Boolean>False</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25" />
            <RowDefinition Height="300" />
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.Resources>
            <!-- タブで表示するタイプ -->
            <DataTemplate
                DataType="{x:Type local:TabViewModel}">
                <TabControl
                    SelectedIndex="{Binding SelectedIndex}"
                    ItemsSource="{Binding Tabs}">
                    <TabControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Name}" />
                                <Button 
                                    Content="X"
                                    Command="{Binding TabCloseCommand}"/>
                            </StackPanel>
                        </DataTemplate>
                    </TabControl.ItemTemplate>
                    <TabControl.ContentTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding Content}" />
                        </DataTemplate>
                    </TabControl.ContentTemplate>
                </TabControl>
            </DataTemplate>

            <!-- 通常タイプ -->
            <DataTemplate DataType="{x:Type local:NormalViewModel}">
                <ContentControl Content="{Binding Content}" />
            </DataTemplate>

            <DataTemplate
                DataType="{x:Type local:UserDirectoryViewModel}">
                <DockPanel>
                    <StackPanel
                        DockPanel.Dock="Left">
                        <TextBlock Text="プロジェクト" />
                        <ListBox
                            DockPanel.Dock="Top"
                            SelectedItem="{Binding SelectedProject}"
                            BorderThickness="0,0,0,0"                            
                            ItemsSource="{Binding CurrentProjects}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <TextBlock 
                                            Text="{Binding Name}">
                                        </TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger 
                                    EventName="MouseDoubleClick">
                                    <behaviors:InvokeCommandAction Command="{Binding SelectProjectCommand}" />
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </ListBox>
                    </StackPanel>
                    <StackPanel
                        Orientation="Horizontal"
                        DockPanel.Dock="Top">
                        <TextBlock 
                            Text="プロジェクトの種類" />
                        <ComboBox
                            SelectedIndex="0"
                            SelectedValue="{Binding ProjectKind}"
                            ItemsSource="{Binding ProjectKindList}" />
                    </StackPanel>
                    <StackPanel
                        Orientation="Horizontal"
                        DockPanel.Dock="Top">
                        <TextBlock 
                            Text="ディレクトリ名" />
                        <TextBox 
                            Width="250"
                            Text="{Binding UserDirectoryName}" />
                        <Button 
                            Content="..."
                            Command="{Binding InputBoxCommand}"/>
                    </StackPanel>
                    <StackPanel
                        Orientation="Horizontal"
                        DockPanel.Dock="Top">
                        <TextBlock Text="プロジェクト名" />
                        <TextBox 
                            Width="250"
                            Text="{Binding ProjectName}" />
                    </StackPanel>
                    <StackPanel
                        DockPanel.Dock="Top">
                        <TextBlock Text="{Binding ProjectDirectoryName}" />
                    </StackPanel>
                    <StackPanel
                        HorizontalAlignment="Stretch"
                        DockPanel.Dock="Top">
                        <StackPanel
                            Orientation="Horizontal"
                            HorizontalAlignment="Right">
                            <Button
                                x:Name="OpenProjectButton"
                                Content="開く"
                                Command="{Binding OpenProjectCommand}"/>
                            <Button
                                Content="作成"
                                Command="{Binding AddProjectCommand}"/>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel
                        DockPanel.Dock="Top">
                        <TextBlock
                            Text="{Binding Message}"/>
                    </StackPanel>
                </DockPanel>
            </DataTemplate>

            <DataTemplate
                DataType="{x:Type local:ConnectionViewModel}">
                <StackPanel>
                    <StackPanel 
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center">
                        <TextBlock 
                            Text="{Binding InitializeMessage}" 
                            Width="500" />
                        <StackPanel 
                            Orientation="Horizontal" >
                            <TextBlock 
                                Text="サーバ名" 
                                Width="100"/>
                            <TextBox 
                                Text="{Binding ServerName}"
                                Width="300" />
                        </StackPanel>
                        <TextBlock 
                            Text="{Binding ServerNameError}"/>
                        <StackPanel 
                            Orientation="Horizontal" >
                            <TextBlock 
                                Text="データベース名"
                                Width="100"/>
                            <TextBox
                                Text="{Binding DataBaseName}"
                                Width="300"/>
                        </StackPanel>
                        <TextBlock 
                            Text="{Binding DataBaseNameError}"/>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock 
                                Text="接続文字列"
                                Width="100"/>
                            <TextBox
                                Text="{Binding ConnectionString}"
                                Width="300"/>
                        </StackPanel>
                        <TextBlock 
                            Text="{Binding ConnectionStringError}"/>
                    </StackPanel>
                    <StackPanel 
                        Orientation="Horizontal"
                        VerticalAlignment="Bottom"
                        HorizontalAlignment="Right">
                        <Button
                            Command="{Binding ConnectionCommand}"
                            Content="Connection"
                            Width="100" />
                        <Button
                            Content="Close" 
                            Width="100" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>

            <HierarchicalDataTemplate
                DataType="{x:Type local:ServerModel}"
                ItemsSource="{Binding DataBases}">
                <StackPanel Orientation="Horizontal">
                    <CheckBox 
                        Margin="5,3,3,3"
                        VerticalContentAlignment="Center"
                        IsEnabled="{Binding IsEnabled}"
                        IsChecked="{Binding IsChecked}" />
                    <TextBlock 
                        Margin="5,3,3,3"
                        IsEnabled="{Binding IsEnabled}"
                        Text="{Binding Name}" />
                </StackPanel>
                <!--<HierarchicalDataTemplate.ItemContainerStyle>
                    <Style TargetType="TreeViewItem">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
                    </Style>
                </HierarchicalDataTemplate.ItemContainerStyle>-->
            </HierarchicalDataTemplate>

            <HierarchicalDataTemplate
                DataType="{x:Type local:DataBaseModel}"
                ItemsSource="{Binding DataTables}" >
                <StackPanel Orientation="Horizontal">
                    <CheckBox 
                        Margin="5,3,3,3"
                        VerticalContentAlignment="Center"
                        IsEnabled="{Binding IsEnabled}"
                        IsChecked="{Binding IsChecked}"/>
                    <!--<Image 
                        Height="15"
                        Width="15"
                        Source="{StaticResource DataBaseImage}" />-->
                    <TextBlock 
                        Margin="5,3,3,3"
                        IsEnabled="{Binding IsEnabled}"
                        Text="{Binding Name}" />
                </StackPanel>
                <!--<HierarchicalDataTemplate.ItemContainerStyle>
                    <Style TargetType="TreeViewItem">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
                    </Style>
                </HierarchicalDataTemplate.ItemContainerStyle>-->
            </HierarchicalDataTemplate>

            <DataTemplate
                DataType="{x:Type local:DataTableModel}">
                <StackPanel Orientation="Horizontal">
                    <CheckBox 
                        Margin="5,3,3,3"
                        VerticalContentAlignment="Center"
                        IsEnabled="{Binding IsEnabled}"
                        IsChecked="{Binding IsChecked}"/>
                    <!--<Image 
                        Height="15"
                        Width="15"
                        Source="{StaticResource DataTableImage}" />-->
                    <TextBlock 
                        Margin="5,3,3,3"
                        IsEnabled="{Binding IsEnabled}"
                        Text="{Binding Name}" />
                </StackPanel>
            </DataTemplate>

            <DataTemplate                
                DataType="{x:Type local:DBExplorerViewModel}">
                <DockPanel
                    VerticalAlignment="Stretch"
                    HorizontalAlignment="Stretch"
                    LastChildFill="True">
                    <StackPanel 
                        DockPanel.Dock="Top"
                        Orientation="Horizontal">
                        <!--<Button
                            Template="{StaticResource DBReLoadButton}"
                            Command="{Binding DBLoadCommand}" />
                        <Button
                            Template="{StaticResource SaveButton}"
                            Command="{Binding SaveCommand}" />-->
                    </StackPanel>

                    <TreeView
                        ScrollViewer.VerticalScrollBarVisibility="Visible"
                        ScrollViewer.HorizontalScrollBarVisibility="Visible"                        
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch"
                        BorderThickness="0,0,0,0">

                        <TreeViewItem
                            FontSize="11"
                            Header="MyDataBase"
                            ItemsSource="{Binding Server.DataBases}">
                            <!--<TreeViewItem.ItemContainerStyle>
                                <Style TargetType="TreeViewItem">
                                    <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
                                </Style>
                            </TreeViewItem.ItemContainerStyle>-->
                        </TreeViewItem>

                        <TreeViewItem                            
                            FontSize="11"
                            Header="Menus"
                            ItemsSource="{Binding MenuFolder.Menus}">
                            <TreeViewItem.ItemContainerStyle>
                                <Style TargetType="TreeViewItem">
                                    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                                </Style>
                            </TreeViewItem.ItemContainerStyle>
                        </TreeViewItem>
                    </TreeView>
                </DockPanel>
            </DataTemplate>
            
            <DataTemplate                
                DataType="{x:Type local:ViewExplorerViewModel}">
                <DockPanel
                    VerticalAlignment="Stretch"
                    HorizontalAlignment="Stretch"
                    LastChildFill="True">
                    <StackPanel 
                        DockPanel.Dock="Top"
                        Orientation="Horizontal">
                        <!--<Button
                            Template="{StaticResource DBReLoadButton}"
                            Command="{Binding DBLoadCommand}" />
                        <Button
                            Template="{StaticResource SaveButton}"
                            Command="{Binding SaveCommand}" />-->
                    </StackPanel>

                    <TreeView
                        ScrollViewer.VerticalScrollBarVisibility="Visible"
                        ScrollViewer.HorizontalScrollBarVisibility="Visible"                        
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch"
                        BorderThickness="0,0,0,0">
                        <TreeViewItem
                            FontSize="11"
                            Header="Views"
                            ItemsSource="{Binding Views}">
                            <TreeViewItem.ItemContainerStyle>
                                <Style TargetType="TreeViewItem">
                                    <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
                                    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                                </Style>
                            </TreeViewItem.ItemContainerStyle>
                        </TreeViewItem>
                    </TreeView>
                </DockPanel>
            </DataTemplate>

            <ContextMenu x:Key="ViewItemContextMenu">
                <MenuItem 
                    Header="名前の変更"
                    Command="{Binding ChangeAliasCommand}"/>
            </ContextMenu>

            <DataTemplate                
                DataType="{x:Type local:ViewItemModel}">
                <DockPanel 
                    Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeViewItem}}"
                    LastChildFill="True">
                    <TextBlock            
                        Visibility="{Binding BlockVisibility}"
                        ContextMenu="{Binding Source={StaticResource ResourceKey=ViewItemContextMenu}}"
                        Text="{Binding Alias}" />
                    <TextBox            
                        Visibility="{Binding BoxVisibility}"
                        ContextMenu="{Binding Source={StaticResource ResourceKey=ViewItemContextMenu}}"
                        Text="{Binding Alias}" />
                </DockPanel>
            </DataTemplate>

            <DataTemplate
                DataType="{x:Type local:HistoryViewModel}">
                <DockPanel
                    LastChildFill="True">
                    <StackPanel                        
                        Orientation="Horizontal"
                        DockPanel.Dock="Top">
                    </StackPanel>
                    <TextBox
                        x:Name="HistoryBox"
                        DockPanel.Dock="Top"         
                        Text="{Binding History.DisplayContents, Mode=OneWay}" 
                        IsReadOnly="True"                        
                        VerticalScrollBarVisibility="Visible"
                        HorizontalScrollBarVisibility="Visible"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch"                        
                        ScrollViewer.CanContentScroll="False" 
                        UseLayoutRounding="False" 
                        AllowDrop="True" 
                        Height="Auto"/>
                </DockPanel>
            </DataTemplate>

            <DataTemplate
                DataType="{x:Type local:MenuViewModel}">
                <StackPanel 
                    Grid.Row="0" 
                    Grid.Column="0" Grid.ColumnSpan="3"
                    Orientation="Horizontal">
                    <Menu>
                        <MenuItem
                            Header="ファイル(F)"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            Margin="0,0,5,0">
                            <MenuItem 
                                Header="開く"
                                Command="{Binding OpenProjectCommand}"/>
                            <MenuItem 
                                Header="保存" />
                        </MenuItem>
                        <MenuItem
                            Header="編集(F)"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            Margin="0,0,5,0" />
                        <MenuItem
                            Header="表示(V)"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            Margin="0,0,5,0" />
                        <MenuItem
                            Header="プロジェクト(P)"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            Margin="0,0,5,0" />
                    </Menu>
                </StackPanel>
            </DataTemplate>

        </Grid.Resources>

        <ContentControl
            x:Name="MenuFrame"
            Grid.Row="0"
            Grid.Column="0" Grid.ColumnSpan="3"
            Content="{Binding MenuViewContent}" />
        <ContentControl
            x:Name="ExplorerFlame"
            Grid.Row="1" Grid.RowSpan="3"
            Grid.Column="0"
            Content="{Binding ExplorerViewContent}" />
        <GridSplitter            
            Grid.Row="1" Grid.RowSpan="3"
            Grid.Column="1"
            Width="10"
            ResizeDirection="Columns"
            ResizeBehavior="PreviousAndNext"
            VerticalAlignment="Stretch"
            HorizontalAlignment="Stretch" />
        <ContentControl
            Grid.Row="1"            
            Grid.Column="2"
            x:Name="MainFlame"                
            Content="{Binding MainViewContent}" />
        <GridSplitter
            Grid.Row="2"
            Grid.Column="2"
            Height="10"
            ResizeDirection="Rows"                
            ResizeBehavior="PreviousAndNext" 
            VerticalAlignment="Stretch"
            HorizontalAlignment="Stretch" />
        <ContentControl
            Grid.Row="3"
            Grid.Column="2"
            x:Name="HistoryFlame"                
            Content="{Binding HistoryViewContent}" />
    </Grid>
</Window>
